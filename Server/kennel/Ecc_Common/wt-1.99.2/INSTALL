                          Wt Installation instructions

Requirements

     * cmake cross-platform build system (www.cmake.org): cmake-2.0.x,
       cmake-2.2.x or cmake-2.4.x
     * FCGI library
     * fastcgi or mod_fcgi plugin for apache
     * apache.
       should work for other web servers as well, but the default
       configuration assumes apache when installing the library or deploying
       examples
     * recent version of C++ boost library
     * xerces-c++ XML library

Additional requirements for some of the examples (OPTIONAL)

     * libgd (style, wt-homepage)
     * libmysql++ (hangman)

Building and installing the Wt library

    1. Create a build directory

   The easiest way to build the library is in a seperate build directory, for
   example within the top-level of the Wt package:

     $ cd wt-x.xx
     $ mkdir build
     $ cd build

    2. Configure the library

     $ cmake ../

   The latter command will try to locate the necessary libraries. If
   everything is OK, then this should end with something like:

   -- Generating done
   -- Build files have been written to: /home/kdforc0/project/wt/build

   If you want to change some of the defaults then you may change variables
   using 'ccmake':

     $ ccmake .

   Some variables you may want to change are

   CMAKE_INSTALL_PREFIX
           Installation prefix for the library and include files)

   RUNDIR
           Path for runtime information managed by wt

   WEBUSER
           Webserver username

   WEBGROUP
           Webserver groupname

   VALGRIND_SUPPORT
           Compile in valgrind support for debugging, activate by appending a
           ?debug to the URL

   DEPLOYROOT
           Path to deploy examples into -- if you want that

   To change any entry, use [Enter]. To save and quit, do [c] followed by
   [g].

    3. Build the library

     $ make

    4. Install the library (as user with sufficient permissions):

     $ make install

    5. Get your LD_LIBRARY_PATH ok, if needed.

   If you did not install Wt in a directory (CMAKE_INSTALL_PREFIX) included
   in the default linker dynamic library search path, then the web server
   will not be able to start Wt programs (such as the examples).

   Fix it by (as user with sufficient permissions):

     $ ln -s /your/path/to/lib/libwt.so /usr/lib

Trying the examples (or your own Wt application)

   To try the examples in the examples directory:

    1. Build the examples

     $ make -C examples

    2. Deploy the example X

     $ cd examples/X
     $ ./deploy.sh

    3. Configure Apache

   Treat the example as a mod_fastcgi application, by adding a line to
   20_mod_fastcgi.conf in your Apache configuration modules.d/ directory,
   e.g.:

     FastCgiServer /var/www/localhost/htdocs/wt-examples/treelist/demotreeList.fcg

   By default, however, both mod_fastcgi and mod_fcgid should start the
   application as a dynamic fastcgi application..., so it should not be
   necessary.

    4. Restart apache
