// This may look like C code, but it's really -*- C++ -*-
/*
 * Copyright (C) 2005 Koen Deforche, Kessel-Lo, Belgium.
 *
 * See the LICENSE file for terms of use.
 */
#ifndef WCOMBOBOX_H_
#define WCOMBOBOX_H_

#ifdef WIN32
#pragma warning (disable: 4251)
#endif

#include <WFormWidget>

/*! \brief Provides a drop-down combo-box control.
 *
 * A combo-box provides the user with a choice of options to chose from.
 * Use addItem(const std::string) or insertItem(int, const std::string) to
 * populate the combo-box. All the content can be cleared through clear().
 *
 * To act on a new selection, either connect a slot to the changed() signal,
 * or to the activated(int) or activated(const std::string) signals.
 *
 * At all times, the current selection index is available through
 * currentIndex() or the text using currentText().
 *
 * A WComboBox is by default an inline widget.
 */
class __declspec(dllexport) WComboBox : public WFormWidget
{
  //MOC: W_OBJECT WComboBox:WFormWidget
  W_OBJECT;

public:
  /*! \brief Create an empty ComboBox with optional parent
   */
  WComboBox(WContainerWidget *parent = 0);

  /*! \brief Add an option item.
   *
   * Equivalent to
   * \link insertItem(int, const std::string) insertItem \endlink (count(),
   * text).
   */
  void addItem(const std::string text);

  /*! \brief Get the number of items
   */
  int  count() const;

  /*! \brief Get the currently selected item.
   */
  int  currentIndex() const;

  /*! \brief Insert an option item at the specified position.
   */
  void insertItem(int index, const std::string text);

  /*! \brief Remove the option item at the specified position.
   */
  void removeItem(int index);

  /*! \brief Change the current selection.
   */
  void setCurrentIndex(int index);

  /*! \brief Change the text for a specified option.
   */
  void setItemText(int index, const std::string text);

  /*! \brief Get the text of the currently selected item.
   */
  const std::string currentText() const;

  /*! \brief Get the text of a particular item.
   */
  const std::string itemText(int index) const;

  /*!
  */
  void setCurrentIndexByStr(std::string strSelText);
public slots:
  //MOC: SLOT WComboBox::clear()
  /*! \brief Clear all items.
   */
  void clear();

public signals:
  //MOC: SIGNAL WComboBox::activated(int)
  /*! \brief Signal emitted when the selection changed.
   */
  void activated(int index);

  //MOC: SIGNAL WComboBox::activated(const std::string text)
  /*! \brief Signal emitted when the selection changed.
   */
  void activated(const std::string text);

private slots:
  //MOC: SLOT WComboBox::propagateChange()
  void propagateChange();

private:
  std::vector<std::string> items_;
  int currentIndex_;

  bool itemsChanged_;
  bool maxVisibleItemsChanged_;
  bool selectionChanged_;
  bool currentlyConnected_;

protected:
  void        updateDom(DomElement& element, bool all);
  DomElement *createDomElement();
  void        getDomChanges(std::vector<DomElement *>& result);

  void        setFormData(const char *value, int length,
			  const char *filename);

};


#endif // WCOMBOBOX_H_
