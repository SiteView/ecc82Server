/* soapSHShenjiGSMModemSoapProxy.h
   Generated by gSOAP 2.7.12 from GSM.h
   Copyright(C) 2000-2008, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/

#ifndef soapSHShenjiGSMModemSoapProxy_H
#define soapSHShenjiGSMModemSoapProxy_H
#include "soapH.h"
class SHShenjiGSMModemSoap
{  
public:
	char buf[1024];
	/// Runtime engine context allocated in constructor
	struct soap *soap;
	/// Endpoint URL of service 'SHShenjiGSMModemSoap' (change as needed)
	const char *endpoint;
	/// Constructor allocates soap engine context, sets default endpoint URL, and sets namespace mapping table
	SHShenjiGSMModemSoap()
	{
		soap = soap_new(); 
		endpoint = "http://localhost:8554/SHShenjiGSMModem.asmx";
		if (soap && !soap->namespaces)
		{ 
			static const struct Namespace namespaces[] = 
			{
				{"SOAP-ENV", "http://www.w3.org/2003/05/soap-envelope", "http://www.w3.org/2003/05/soap-envelope", NULL},
				{"SOAP-ENC", "http://www.w3.org/2003/05/soap-encoding", "http://www.w3.org/2003/05/soap-encoding", NULL},
				{"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
				{"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
				{"ns2", "http://tempuri.org/SHShenjiGSMModemSoap", NULL, NULL},
				{"ns1", "http://tempuri.org/", NULL, NULL},
				{"ns3", "http://tempuri.org/SHShenjiGSMModemSoap12", NULL, NULL},
				{NULL, NULL, NULL, NULL}
			};
			soap->namespaces = namespaces; 
		} 
	};
	SHShenjiGSMModemSoap(const char * UrlAdddr)
	{
		soap = soap_new(); 
		soap_set_mode(soap, SOAP_C_UTFSTRING);
		sprintf(buf, "%s" , UrlAdddr);
		endpoint = buf;
//		endpoint = "http://localhost:8554/SHShenjiGSMModem.asmx";
		if (soap && !soap->namespaces)
		{ 
			static const struct Namespace namespaces[] = 
			{
				{"SOAP-ENV", "http://www.w3.org/2003/05/soap-envelope", "http://www.w3.org/2003/05/soap-envelope", NULL},
				{"SOAP-ENC", "http://www.w3.org/2003/05/soap-encoding", "http://www.w3.org/2003/05/soap-encoding", NULL},
				{"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
				{"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
				{"ns2", "http://tempuri.org/SHShenjiGSMModemSoap", NULL, NULL},
				{"ns1", "http://tempuri.org/", NULL, NULL},
				{"ns3", "http://tempuri.org/SHShenjiGSMModemSoap12", NULL, NULL},
				{NULL, NULL, NULL, NULL}
			};
			soap->namespaces = namespaces; 
		} 
	};

	/// Destructor frees deserialized data and soap engine context
	virtual ~SHShenjiGSMModemSoap() { if (soap) { soap_destroy(soap); soap_end(soap); soap_free(soap); } };
	/// Invoke 'SendNoteInfoForUser' of service 'SHShenjiGSMModemSoap' and return error code (or SOAP_OK)
	virtual int __ns2__SendNoteInfoForUser(_ns1__SendNoteInfoForUser *ns1__SendNoteInfoForUser, _ns1__SendNoteInfoForUserResponse *ns1__SendNoteInfoForUserResponse) { return soap ? soap_call___ns2__SendNoteInfoForUser(soap, endpoint, NULL, ns1__SendNoteInfoForUser, ns1__SendNoteInfoForUserResponse) : SOAP_EOM; };
	/// Invoke 'SendNoteInfo' of service 'SHShenjiGSMModemSoap' and return error code (or SOAP_OK)
	virtual int __ns2__SendNoteInfo(_ns1__SendNoteInfo *ns1__SendNoteInfo, _ns1__SendNoteInfoResponse *ns1__SendNoteInfoResponse) { return soap ? soap_call___ns2__SendNoteInfo(soap, endpoint, NULL, ns1__SendNoteInfo, ns1__SendNoteInfoResponse) : SOAP_EOM; };
	/// Invoke 'SendNoteInfoForUserOutID' of service 'SHShenjiGSMModemSoap' and return error code (or SOAP_OK)
	virtual int __ns2__SendNoteInfoForUserOutID(_ns1__SendNoteInfoForUserOutID *ns1__SendNoteInfoForUserOutID, _ns1__SendNoteInfoForUserOutIDResponse *ns1__SendNoteInfoForUserOutIDResponse) { return soap ? soap_call___ns2__SendNoteInfoForUserOutID(soap, endpoint, NULL, ns1__SendNoteInfoForUserOutID, ns1__SendNoteInfoForUserOutIDResponse) : SOAP_EOM; };
	/// Invoke 'SendNoteInfoOutID' of service 'SHShenjiGSMModemSoap' and return error code (or SOAP_OK)
	virtual int __ns2__SendNoteInfoOutID(_ns1__SendNoteInfoOutID *ns1__SendNoteInfoOutID, _ns1__SendNoteInfoOutIDResponse *ns1__SendNoteInfoOutIDResponse) { return soap ? soap_call___ns2__SendNoteInfoOutID(soap, endpoint, NULL, ns1__SendNoteInfoOutID, ns1__SendNoteInfoOutIDResponse) : SOAP_EOM; };
};
#endif
