/* soapClient.cpp
   Generated by gSOAP 2.7.12 from GSM.h
   Copyright(C) 2000-2008, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/
#include "stdafx.h"
#include "soapH.h"

SOAP_SOURCE_STAMP("@(#) soapClient.cpp ver 2.7.12 2010-03-26 07:29:30 GMT")


SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__SendNoteInfoForUser(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__SendNoteInfoForUser *ns1__SendNoteInfoForUser, _ns1__SendNoteInfoForUserResponse *ns1__SendNoteInfoForUserResponse)
{	struct __ns2__SendNoteInfoForUser soap_tmp___ns2__SendNoteInfoForUser;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8554/SHShenjiGSMModem.asmx";
	if (!soap_action)
		soap_action = "http://tempuri.org/SendNoteInfoForUser";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__SendNoteInfoForUser.ns1__SendNoteInfoForUser = ns1__SendNoteInfoForUser;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__SendNoteInfoForUser(soap, &soap_tmp___ns2__SendNoteInfoForUser);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__SendNoteInfoForUser(soap, &soap_tmp___ns2__SendNoteInfoForUser, "-ns2:SendNoteInfoForUser", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__SendNoteInfoForUser(soap, &soap_tmp___ns2__SendNoteInfoForUser, "-ns2:SendNoteInfoForUser", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__SendNoteInfoForUserResponse)
		return soap_closesock(soap);
	ns1__SendNoteInfoForUserResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SendNoteInfoForUserResponse->soap_get(soap, "ns1:SendNoteInfoForUserResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__SendNoteInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__SendNoteInfo *ns1__SendNoteInfo, _ns1__SendNoteInfoResponse *ns1__SendNoteInfoResponse)
{	struct __ns2__SendNoteInfo soap_tmp___ns2__SendNoteInfo;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8554/SHShenjiGSMModem.asmx";
	if (!soap_action)
		soap_action = "http://tempuri.org/SendNoteInfo";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__SendNoteInfo.ns1__SendNoteInfo = ns1__SendNoteInfo;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__SendNoteInfo(soap, &soap_tmp___ns2__SendNoteInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__SendNoteInfo(soap, &soap_tmp___ns2__SendNoteInfo, "-ns2:SendNoteInfo", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__SendNoteInfo(soap, &soap_tmp___ns2__SendNoteInfo, "-ns2:SendNoteInfo", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__SendNoteInfoResponse)
		return soap_closesock(soap);
	ns1__SendNoteInfoResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SendNoteInfoResponse->soap_get(soap, "ns1:SendNoteInfoResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__SendNoteInfoForUserOutID(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__SendNoteInfoForUserOutID *ns1__SendNoteInfoForUserOutID, _ns1__SendNoteInfoForUserOutIDResponse *ns1__SendNoteInfoForUserOutIDResponse)
{	struct __ns2__SendNoteInfoForUserOutID soap_tmp___ns2__SendNoteInfoForUserOutID;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8554/SHShenjiGSMModem.asmx";
	if (!soap_action)
		soap_action = "http://tempuri.org/SendNoteInfoForUserOutID";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__SendNoteInfoForUserOutID.ns1__SendNoteInfoForUserOutID = ns1__SendNoteInfoForUserOutID;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__SendNoteInfoForUserOutID(soap, &soap_tmp___ns2__SendNoteInfoForUserOutID);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__SendNoteInfoForUserOutID(soap, &soap_tmp___ns2__SendNoteInfoForUserOutID, "-ns2:SendNoteInfoForUserOutID", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__SendNoteInfoForUserOutID(soap, &soap_tmp___ns2__SendNoteInfoForUserOutID, "-ns2:SendNoteInfoForUserOutID", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__SendNoteInfoForUserOutIDResponse)
		return soap_closesock(soap);
	ns1__SendNoteInfoForUserOutIDResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SendNoteInfoForUserOutIDResponse->soap_get(soap, "ns1:SendNoteInfoForUserOutIDResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__SendNoteInfoOutID(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__SendNoteInfoOutID *ns1__SendNoteInfoOutID, _ns1__SendNoteInfoOutIDResponse *ns1__SendNoteInfoOutIDResponse)
{	struct __ns2__SendNoteInfoOutID soap_tmp___ns2__SendNoteInfoOutID;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8554/SHShenjiGSMModem.asmx";
	if (!soap_action)
		soap_action = "http://tempuri.org/SendNoteInfoOutID";
	soap->encodingStyle = NULL;
	soap_tmp___ns2__SendNoteInfoOutID.ns1__SendNoteInfoOutID = ns1__SendNoteInfoOutID;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns2__SendNoteInfoOutID(soap, &soap_tmp___ns2__SendNoteInfoOutID);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns2__SendNoteInfoOutID(soap, &soap_tmp___ns2__SendNoteInfoOutID, "-ns2:SendNoteInfoOutID", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns2__SendNoteInfoOutID(soap, &soap_tmp___ns2__SendNoteInfoOutID, "-ns2:SendNoteInfoOutID", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__SendNoteInfoOutIDResponse)
		return soap_closesock(soap);
	ns1__SendNoteInfoOutIDResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SendNoteInfoOutIDResponse->soap_get(soap, "ns1:SendNoteInfoOutIDResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns3__SendNoteInfoForUser(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__SendNoteInfoForUser *ns1__SendNoteInfoForUser, _ns1__SendNoteInfoForUserResponse *ns1__SendNoteInfoForUserResponse)
{	struct __ns3__SendNoteInfoForUser soap_tmp___ns3__SendNoteInfoForUser;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8554/SHShenjiGSMModem.asmx";
	if (!soap_action)
		soap_action = "http://tempuri.org/SendNoteInfoForUser";
	soap->encodingStyle = NULL;
	soap_tmp___ns3__SendNoteInfoForUser.ns1__SendNoteInfoForUser = ns1__SendNoteInfoForUser;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns3__SendNoteInfoForUser(soap, &soap_tmp___ns3__SendNoteInfoForUser);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns3__SendNoteInfoForUser(soap, &soap_tmp___ns3__SendNoteInfoForUser, "-ns3:SendNoteInfoForUser", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns3__SendNoteInfoForUser(soap, &soap_tmp___ns3__SendNoteInfoForUser, "-ns3:SendNoteInfoForUser", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__SendNoteInfoForUserResponse)
		return soap_closesock(soap);
	ns1__SendNoteInfoForUserResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SendNoteInfoForUserResponse->soap_get(soap, "ns1:SendNoteInfoForUserResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns3__SendNoteInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__SendNoteInfo *ns1__SendNoteInfo, _ns1__SendNoteInfoResponse *ns1__SendNoteInfoResponse)
{	struct __ns3__SendNoteInfo soap_tmp___ns3__SendNoteInfo;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8554/SHShenjiGSMModem.asmx";
	if (!soap_action)
		soap_action = "http://tempuri.org/SendNoteInfo";
	soap->encodingStyle = NULL;
	soap_tmp___ns3__SendNoteInfo.ns1__SendNoteInfo = ns1__SendNoteInfo;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns3__SendNoteInfo(soap, &soap_tmp___ns3__SendNoteInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns3__SendNoteInfo(soap, &soap_tmp___ns3__SendNoteInfo, "-ns3:SendNoteInfo", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns3__SendNoteInfo(soap, &soap_tmp___ns3__SendNoteInfo, "-ns3:SendNoteInfo", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__SendNoteInfoResponse)
		return soap_closesock(soap);
	ns1__SendNoteInfoResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SendNoteInfoResponse->soap_get(soap, "ns1:SendNoteInfoResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns3__SendNoteInfoForUserOutID(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__SendNoteInfoForUserOutID *ns1__SendNoteInfoForUserOutID, _ns1__SendNoteInfoForUserOutIDResponse *ns1__SendNoteInfoForUserOutIDResponse)
{	struct __ns3__SendNoteInfoForUserOutID soap_tmp___ns3__SendNoteInfoForUserOutID;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8554/SHShenjiGSMModem.asmx";
	if (!soap_action)
		soap_action = "http://tempuri.org/SendNoteInfoForUserOutID";
	soap->encodingStyle = NULL;
	soap_tmp___ns3__SendNoteInfoForUserOutID.ns1__SendNoteInfoForUserOutID = ns1__SendNoteInfoForUserOutID;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns3__SendNoteInfoForUserOutID(soap, &soap_tmp___ns3__SendNoteInfoForUserOutID);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns3__SendNoteInfoForUserOutID(soap, &soap_tmp___ns3__SendNoteInfoForUserOutID, "-ns3:SendNoteInfoForUserOutID", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns3__SendNoteInfoForUserOutID(soap, &soap_tmp___ns3__SendNoteInfoForUserOutID, "-ns3:SendNoteInfoForUserOutID", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__SendNoteInfoForUserOutIDResponse)
		return soap_closesock(soap);
	ns1__SendNoteInfoForUserOutIDResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SendNoteInfoForUserOutIDResponse->soap_get(soap, "ns1:SendNoteInfoForUserOutIDResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns3__SendNoteInfoOutID(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__SendNoteInfoOutID *ns1__SendNoteInfoOutID, _ns1__SendNoteInfoOutIDResponse *ns1__SendNoteInfoOutIDResponse)
{	struct __ns3__SendNoteInfoOutID soap_tmp___ns3__SendNoteInfoOutID;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8554/SHShenjiGSMModem.asmx";
	if (!soap_action)
		soap_action = "http://tempuri.org/SendNoteInfoOutID";
	soap->encodingStyle = NULL;
	soap_tmp___ns3__SendNoteInfoOutID.ns1__SendNoteInfoOutID = ns1__SendNoteInfoOutID;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns3__SendNoteInfoOutID(soap, &soap_tmp___ns3__SendNoteInfoOutID);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns3__SendNoteInfoOutID(soap, &soap_tmp___ns3__SendNoteInfoOutID, "-ns3:SendNoteInfoOutID", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns3__SendNoteInfoOutID(soap, &soap_tmp___ns3__SendNoteInfoOutID, "-ns3:SendNoteInfoOutID", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__SendNoteInfoOutIDResponse)
		return soap_closesock(soap);
	ns1__SendNoteInfoOutIDResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SendNoteInfoOutIDResponse->soap_get(soap, "ns1:SendNoteInfoOutIDResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

/* End of soapClient.cpp */
