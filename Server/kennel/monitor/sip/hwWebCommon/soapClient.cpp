/* soapClient.cpp
   Generated by gSOAP 2.7.12 from huaWei.h
   Copyright(C) 2000-2008, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/
#include "soapH.h"

SOAP_SOURCE_STAMP("@(#) soapClient.cpp ver 2.7.12 2010-01-07 07:48:51 GMT")


SOAP_FMAC5 int SOAP_FMAC6 soap_call___cwmp__XFileEvent(struct soap *soap, const char *soap_endpoint, const char *soap_action, _cwmp__XFileEvent *cwmp__XFileEvent, _cwmp__XFileEventResponse *cwmp__XFileEventResponse)
{	struct __cwmp__XFileEvent soap_tmp___cwmp__XFileEvent;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080/cwmp";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___cwmp__XFileEvent.cwmp__XFileEvent = cwmp__XFileEvent;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___cwmp__XFileEvent(soap, &soap_tmp___cwmp__XFileEvent);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___cwmp__XFileEvent(soap, &soap_tmp___cwmp__XFileEvent, "-cwmp:XFileEvent", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___cwmp__XFileEvent(soap, &soap_tmp___cwmp__XFileEvent, "-cwmp:XFileEvent", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!cwmp__XFileEventResponse)
		return soap_closesock(soap);
	cwmp__XFileEventResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	cwmp__XFileEventResponse->soap_get(soap, "cwmp:XFileEventResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___cwmp__Boot(struct soap *soap, const char *soap_endpoint, const char *soap_action, _cwmp__Boot *cwmp__Boot, _cwmp__BootResponse *cwmp__BootResponse)
{	struct __cwmp__Boot soap_tmp___cwmp__Boot;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080/cwmp";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___cwmp__Boot.cwmp__Boot = cwmp__Boot;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___cwmp__Boot(soap, &soap_tmp___cwmp__Boot);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___cwmp__Boot(soap, &soap_tmp___cwmp__Boot, "-cwmp:Boot", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___cwmp__Boot(soap, &soap_tmp___cwmp__Boot, "-cwmp:Boot", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!cwmp__BootResponse)
		return soap_closesock(soap);
	cwmp__BootResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	cwmp__BootResponse->soap_get(soap, "cwmp:BootResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___cwmp__ValueChange(struct soap *soap, const char *soap_endpoint, const char *soap_action, _cwmp__ValueChange *cwmp__ValueChange, _cwmp__ValueChangeResponse *cwmp__ValueChangeResponse)
{	struct __cwmp__ValueChange soap_tmp___cwmp__ValueChange;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080/cwmp";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___cwmp__ValueChange.cwmp__ValueChange = cwmp__ValueChange;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___cwmp__ValueChange(soap, &soap_tmp___cwmp__ValueChange);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___cwmp__ValueChange(soap, &soap_tmp___cwmp__ValueChange, "-cwmp:ValueChange", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___cwmp__ValueChange(soap, &soap_tmp___cwmp__ValueChange, "-cwmp:ValueChange", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!cwmp__ValueChangeResponse)
		return soap_closesock(soap);
	cwmp__ValueChangeResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	cwmp__ValueChangeResponse->soap_get(soap, "cwmp:ValueChangeResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___cwmp__Periodic(struct soap *soap, const char *soap_endpoint, const char *soap_action, _cwmp__Periodic *cwmp__Periodic, _cwmp__PeriodicResponse *cwmp__PeriodicResponse)
{	struct __cwmp__Periodic soap_tmp___cwmp__Periodic;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080/cwmp";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___cwmp__Periodic.cwmp__Periodic = cwmp__Periodic;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___cwmp__Periodic(soap, &soap_tmp___cwmp__Periodic);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___cwmp__Periodic(soap, &soap_tmp___cwmp__Periodic, "-cwmp:Periodic", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___cwmp__Periodic(soap, &soap_tmp___cwmp__Periodic, "-cwmp:Periodic", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!cwmp__PeriodicResponse)
		return soap_closesock(soap);
	cwmp__PeriodicResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	cwmp__PeriodicResponse->soap_get(soap, "cwmp:PeriodicResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___cwmp__CpeTransferComplete(struct soap *soap, const char *soap_endpoint, const char *soap_action, _cwmp__CpeTransferComplete *cwmp__CpeTransferComplete, _cwmp__CpeTransferCompleteResponse *cwmp__CpeTransferCompleteResponse)
{	struct __cwmp__CpeTransferComplete soap_tmp___cwmp__CpeTransferComplete;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080/cwmp";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___cwmp__CpeTransferComplete.cwmp__CpeTransferComplete = cwmp__CpeTransferComplete;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___cwmp__CpeTransferComplete(soap, &soap_tmp___cwmp__CpeTransferComplete);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___cwmp__CpeTransferComplete(soap, &soap_tmp___cwmp__CpeTransferComplete, "-cwmp:CpeTransferComplete", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___cwmp__CpeTransferComplete(soap, &soap_tmp___cwmp__CpeTransferComplete, "-cwmp:CpeTransferComplete", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!cwmp__CpeTransferCompleteResponse)
		return soap_closesock(soap);
	cwmp__CpeTransferCompleteResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	cwmp__CpeTransferCompleteResponse->soap_get(soap, "cwmp:CpeTransferCompleteResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___cwmp__Download(struct soap *soap, const char *soap_endpoint, const char *soap_action, _cwmp__Download *cwmp__Download, _cwmp__DownloadResponse *cwmp__DownloadResponse)
{	struct __cwmp__Download soap_tmp___cwmp__Download;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080/cwmp";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___cwmp__Download.cwmp__Download = cwmp__Download;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___cwmp__Download(soap, &soap_tmp___cwmp__Download);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___cwmp__Download(soap, &soap_tmp___cwmp__Download, "-cwmp:Download", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___cwmp__Download(soap, &soap_tmp___cwmp__Download, "-cwmp:Download", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!cwmp__DownloadResponse)
		return soap_closesock(soap);
	cwmp__DownloadResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	cwmp__DownloadResponse->soap_get(soap, "cwmp:DownloadResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___cwmp__SetParameterValues(struct soap *soap, const char *soap_endpoint, const char *soap_action, _cwmp__SetParameterValues *cwmp__SetParameterValues, _cwmp__SetParameterValuesResponse *cwmp__SetParameterValuesResponse)
{	struct __cwmp__SetParameterValues soap_tmp___cwmp__SetParameterValues;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080/cwmp";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___cwmp__SetParameterValues.cwmp__SetParameterValues = cwmp__SetParameterValues;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___cwmp__SetParameterValues(soap, &soap_tmp___cwmp__SetParameterValues);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___cwmp__SetParameterValues(soap, &soap_tmp___cwmp__SetParameterValues, "-cwmp:SetParameterValues", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___cwmp__SetParameterValues(soap, &soap_tmp___cwmp__SetParameterValues, "-cwmp:SetParameterValues", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!cwmp__SetParameterValuesResponse)
		return soap_closesock(soap);
	cwmp__SetParameterValuesResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	cwmp__SetParameterValuesResponse->soap_get(soap, "cwmp:SetParameterValuesResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___cwmp__GetParameterValues(struct soap *soap, const char *soap_endpoint, const char *soap_action, _cwmp__GetParameterValues *cwmp__GetParameterValues, _cwmp__GetParameterValuesResponse *cwmp__GetParameterValuesResponse)
{	struct __cwmp__GetParameterValues soap_tmp___cwmp__GetParameterValues;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080/cwmp";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___cwmp__GetParameterValues.cwmp__GetParameterValues = cwmp__GetParameterValues;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___cwmp__GetParameterValues(soap, &soap_tmp___cwmp__GetParameterValues);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___cwmp__GetParameterValues(soap, &soap_tmp___cwmp__GetParameterValues, "-cwmp:GetParameterValues", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___cwmp__GetParameterValues(soap, &soap_tmp___cwmp__GetParameterValues, "-cwmp:GetParameterValues", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!cwmp__GetParameterValuesResponse)
		return soap_closesock(soap);
	cwmp__GetParameterValuesResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	cwmp__GetParameterValuesResponse->soap_get(soap, "cwmp:GetParameterValuesResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___cwmp__SetParameterAttributes(struct soap *soap, const char *soap_endpoint, const char *soap_action, _cwmp__SetParameterAttributes *cwmp__SetParameterAttributes, _cwmp__SetParameterAttributesResponse *cwmp__SetParameterAttributesResponse)
{	struct __cwmp__SetParameterAttributes soap_tmp___cwmp__SetParameterAttributes;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080/cwmp";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___cwmp__SetParameterAttributes.cwmp__SetParameterAttributes = cwmp__SetParameterAttributes;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___cwmp__SetParameterAttributes(soap, &soap_tmp___cwmp__SetParameterAttributes);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___cwmp__SetParameterAttributes(soap, &soap_tmp___cwmp__SetParameterAttributes, "-cwmp:SetParameterAttributes", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___cwmp__SetParameterAttributes(soap, &soap_tmp___cwmp__SetParameterAttributes, "-cwmp:SetParameterAttributes", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!cwmp__SetParameterAttributesResponse)
		return soap_closesock(soap);
	cwmp__SetParameterAttributesResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	cwmp__SetParameterAttributesResponse->soap_get(soap, "cwmp:SetParameterAttributesResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___cwmp__GetParameterAttributes(struct soap *soap, const char *soap_endpoint, const char *soap_action, _cwmp__GetParameterAttributes *cwmp__GetParameterAttributes, _cwmp__GetParameterAttributesResponse *cwmp__GetParameterAttributesResponse)
{	struct __cwmp__GetParameterAttributes soap_tmp___cwmp__GetParameterAttributes;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080/cwmp";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___cwmp__GetParameterAttributes.cwmp__GetParameterAttributes = cwmp__GetParameterAttributes;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___cwmp__GetParameterAttributes(soap, &soap_tmp___cwmp__GetParameterAttributes);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___cwmp__GetParameterAttributes(soap, &soap_tmp___cwmp__GetParameterAttributes, "-cwmp:GetParameterAttributes", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___cwmp__GetParameterAttributes(soap, &soap_tmp___cwmp__GetParameterAttributes, "-cwmp:GetParameterAttributes", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!cwmp__GetParameterAttributesResponse)
		return soap_closesock(soap);
	cwmp__GetParameterAttributesResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	cwmp__GetParameterAttributesResponse->soap_get(soap, "cwmp:GetParameterAttributesResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___cwmp__Reboot(struct soap *soap, const char *soap_endpoint, const char *soap_action, _cwmp__Reboot *cwmp__Reboot, _cwmp__RebootResponse *cwmp__RebootResponse)
{	struct __cwmp__Reboot soap_tmp___cwmp__Reboot;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080/cwmp";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___cwmp__Reboot.cwmp__Reboot = cwmp__Reboot;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___cwmp__Reboot(soap, &soap_tmp___cwmp__Reboot);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___cwmp__Reboot(soap, &soap_tmp___cwmp__Reboot, "-cwmp:Reboot", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___cwmp__Reboot(soap, &soap_tmp___cwmp__Reboot, "-cwmp:Reboot", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!cwmp__RebootResponse)
		return soap_closesock(soap);
	cwmp__RebootResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	cwmp__RebootResponse->soap_get(soap, "cwmp:RebootResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___cwmp__FactoryReset(struct soap *soap, const char *soap_endpoint, const char *soap_action, _cwmp__FactoryReset *cwmp__FactoryReset, _cwmp__FactoryResetResponse *cwmp__FactoryResetResponse)
{	struct __cwmp__FactoryReset soap_tmp___cwmp__FactoryReset;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080/cwmp";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___cwmp__FactoryReset.cwmp__FactoryReset = cwmp__FactoryReset;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___cwmp__FactoryReset(soap, &soap_tmp___cwmp__FactoryReset);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___cwmp__FactoryReset(soap, &soap_tmp___cwmp__FactoryReset, "-cwmp:FactoryReset", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___cwmp__FactoryReset(soap, &soap_tmp___cwmp__FactoryReset, "-cwmp:FactoryReset", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!cwmp__FactoryResetResponse)
		return soap_closesock(soap);
	cwmp__FactoryResetResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	cwmp__FactoryResetResponse->soap_get(soap, "cwmp:FactoryResetResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

/* End of soapClient.cpp */
