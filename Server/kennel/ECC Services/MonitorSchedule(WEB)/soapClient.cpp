/* soapClient.cpp
   Generated by gSOAP 2.7.12 from ecc.h
   Copyright(C) 2000-2008, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/
#include "stdafx.h"
#include "soapH.h"

SOAP_SOURCE_STAMP("@(#) soapClient.cpp ver 2.7.12 2009-11-19 06:03:42 GMT")


SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__appendRecord(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__appendRecord *ns1__appendRecord, _ns1__appendRecordResponse *ns1__appendRecordResponse)
{	struct __ns1__appendRecord soap_tmp___ns1__appendRecord;
	if (!soap_endpoint)
		soap_endpoint = "http://192.168.0.15:8080/SvdbCache/services/SvdbApiImpl";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__appendRecord.ns1__appendRecord = ns1__appendRecord;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__appendRecord(soap, &soap_tmp___ns1__appendRecord);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__appendRecord(soap, &soap_tmp___ns1__appendRecord, "-ns1:appendRecord", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__appendRecord(soap, &soap_tmp___ns1__appendRecord, "-ns1:appendRecord", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__appendRecordResponse)
		return soap_closesock(soap);
	ns1__appendRecordResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__appendRecordResponse->soap_get(soap, "ns1:appendRecordResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

/* End of soapClient.cpp */
