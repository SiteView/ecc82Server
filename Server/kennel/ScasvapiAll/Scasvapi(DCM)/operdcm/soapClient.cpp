/* soapClient.cpp
   Generated by gSOAP 2.7.12 from dcm.h
   Copyright(C) 2000-2008, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/
#include "stdafx.h"
#include "soapH.h"

SOAP_SOURCE_STAMP("@(#) soapClient.cpp ver 2.7.12 2009-05-22 08:50:25 GMT")


SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__getVersion(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__getVersion *ns1__getVersion_, ns1__getVersionResponse *ns1__getVersionResponse_)
{	struct __ns1__getVersion soap_tmp___ns1__getVersion;
	if (!soap_endpoint)
		soap_endpoint = "http://192.168.0.56:8688/DCMService/services/Dcm.DcmPort/";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getVersion.ns1__getVersion_ = ns1__getVersion_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getVersion(soap, &soap_tmp___ns1__getVersion);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getVersion(soap, &soap_tmp___ns1__getVersion, "-ns1:getVersion", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getVersion(soap, &soap_tmp___ns1__getVersion, "-ns1:getVersion", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__getVersionResponse_)
		return soap_closesock(soap);
	ns1__getVersionResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__getVersionResponse_->soap_get(soap, "ns1:getVersionResponse", "ns1:getVersionResponse");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__setPolicy(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__setPolicy *ns1__setPolicy_, ns1__setPolicyResponse *ns1__setPolicyResponse_)
{	struct __ns1__setPolicy soap_tmp___ns1__setPolicy;
	if (!soap_endpoint)
		soap_endpoint = "http://192.168.0.56:8688/DCMService/services/Dcm.DcmPort/";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__setPolicy.ns1__setPolicy_ = ns1__setPolicy_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__setPolicy(soap, &soap_tmp___ns1__setPolicy);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__setPolicy(soap, &soap_tmp___ns1__setPolicy, "-ns1:setPolicy", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__setPolicy(soap, &soap_tmp___ns1__setPolicy, "-ns1:setPolicy", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__setPolicyResponse_)
		return soap_closesock(soap);
	ns1__setPolicyResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__setPolicyResponse_->soap_get(soap, "ns1:setPolicyResponse", "ns1:setPolicyResponse");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__updatePolicy(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__updatePolicy *ns1__updatePolicy_, ns1__updatePolicyResponse *ns1__updatePolicyResponse_)
{	struct __ns1__updatePolicy soap_tmp___ns1__updatePolicy;
	if (!soap_endpoint)
		soap_endpoint = "http://192.168.0.56:8688/DCMService/services/Dcm.DcmPort/";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__updatePolicy.ns1__updatePolicy_ = ns1__updatePolicy_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__updatePolicy(soap, &soap_tmp___ns1__updatePolicy);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__updatePolicy(soap, &soap_tmp___ns1__updatePolicy, "-ns1:updatePolicy", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__updatePolicy(soap, &soap_tmp___ns1__updatePolicy, "-ns1:updatePolicy", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__updatePolicyResponse_)
		return soap_closesock(soap);
	ns1__updatePolicyResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__updatePolicyResponse_->soap_get(soap, "ns1:updatePolicyResponse", "ns1:updatePolicyResponse");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__addEntity(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__addEntity *ns1__addEntity_, ns1__addEntityResponse *ns1__addEntityResponse_)
{	struct __ns1__addEntity soap_tmp___ns1__addEntity;
	if (!soap_endpoint)
		soap_endpoint = "http://192.168.0.56:8688/DCMService/services/Dcm.DcmPort/";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__addEntity.ns1__addEntity_ = ns1__addEntity_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__addEntity(soap, &soap_tmp___ns1__addEntity);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__addEntity(soap, &soap_tmp___ns1__addEntity, "-ns1:addEntity", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__addEntity(soap, &soap_tmp___ns1__addEntity, "-ns1:addEntity", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__addEntityResponse_)
		return soap_closesock(soap);
	ns1__addEntityResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__addEntityResponse_->soap_get(soap, "ns1:addEntityResponse", "ns1:addEntityResponse");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__associateEntity(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__associateEntity *ns1__associateEntity_, ns1__associateEntityResponse *ns1__associateEntityResponse_)
{	struct __ns1__associateEntity soap_tmp___ns1__associateEntity;
	if (!soap_endpoint)
		soap_endpoint = "http://192.168.0.56:8688/DCMService/services/Dcm.DcmPort/";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__associateEntity.ns1__associateEntity_ = ns1__associateEntity_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__associateEntity(soap, &soap_tmp___ns1__associateEntity);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__associateEntity(soap, &soap_tmp___ns1__associateEntity, "-ns1:associateEntity", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__associateEntity(soap, &soap_tmp___ns1__associateEntity, "-ns1:associateEntity", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__associateEntityResponse_)
		return soap_closesock(soap);
	ns1__associateEntityResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__associateEntityResponse_->soap_get(soap, "ns1:associateEntityResponse", "ns1:associateEntityResponse");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__defineCustomEvent(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__defineCustomEvent *ns1__defineCustomEvent_, ns1__defineCustomEventResponse *ns1__defineCustomEventResponse_)
{	struct __ns1__defineCustomEvent soap_tmp___ns1__defineCustomEvent;
	if (!soap_endpoint)
		soap_endpoint = "http://192.168.0.56:8688/DCMService/services/Dcm.DcmPort/";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__defineCustomEvent.ns1__defineCustomEvent_ = ns1__defineCustomEvent_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__defineCustomEvent(soap, &soap_tmp___ns1__defineCustomEvent);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__defineCustomEvent(soap, &soap_tmp___ns1__defineCustomEvent, "-ns1:defineCustomEvent", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__defineCustomEvent(soap, &soap_tmp___ns1__defineCustomEvent, "-ns1:defineCustomEvent", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__defineCustomEventResponse_)
		return soap_closesock(soap);
	ns1__defineCustomEventResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__defineCustomEventResponse_->soap_get(soap, "ns1:defineCustomEventResponse", "ns1:defineCustomEventResponse");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__deleteSecretKey(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__deleteSecretKey *ns1__deleteSecretKey_, ns1__deleteSecretKeyResponse *ns1__deleteSecretKeyResponse_)
{	struct __ns1__deleteSecretKey soap_tmp___ns1__deleteSecretKey;
	if (!soap_endpoint)
		soap_endpoint = "http://192.168.0.56:8688/DCMService/services/Dcm.DcmPort/";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__deleteSecretKey.ns1__deleteSecretKey_ = ns1__deleteSecretKey_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__deleteSecretKey(soap, &soap_tmp___ns1__deleteSecretKey);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__deleteSecretKey(soap, &soap_tmp___ns1__deleteSecretKey, "-ns1:deleteSecretKey", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__deleteSecretKey(soap, &soap_tmp___ns1__deleteSecretKey, "-ns1:deleteSecretKey", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__deleteSecretKeyResponse_)
		return soap_closesock(soap);
	ns1__deleteSecretKeyResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__deleteSecretKeyResponse_->soap_get(soap, "ns1:deleteSecretKeyResponse", "ns1:deleteSecretKeyResponse");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__disassociateEntity(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__disassociateEntity *ns1__disassociateEntity_, ns1__disassociateEntityResponse *ns1__disassociateEntityResponse_)
{	struct __ns1__disassociateEntity soap_tmp___ns1__disassociateEntity;
	if (!soap_endpoint)
		soap_endpoint = "http://192.168.0.56:8688/DCMService/services/Dcm.DcmPort/";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__disassociateEntity.ns1__disassociateEntity_ = ns1__disassociateEntity_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__disassociateEntity(soap, &soap_tmp___ns1__disassociateEntity);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__disassociateEntity(soap, &soap_tmp___ns1__disassociateEntity, "-ns1:disassociateEntity", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__disassociateEntity(soap, &soap_tmp___ns1__disassociateEntity, "-ns1:disassociateEntity", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__disassociateEntityResponse_)
		return soap_closesock(soap);
	ns1__disassociateEntityResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__disassociateEntityResponse_->soap_get(soap, "ns1:disassociateEntityResponse", "ns1:disassociateEntityResponse");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__enumerateCustomEvents(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__enumerateCustomEvents *ns1__enumerateCustomEvents_, ns1__enumerateCustomEventsResponse *ns1__enumerateCustomEventsResponse_)
{	struct __ns1__enumerateCustomEvents soap_tmp___ns1__enumerateCustomEvents;
	if (!soap_endpoint)
		soap_endpoint = "http://192.168.0.56:8688/DCMService/services/Dcm.DcmPort/";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__enumerateCustomEvents.ns1__enumerateCustomEvents_ = ns1__enumerateCustomEvents_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__enumerateCustomEvents(soap, &soap_tmp___ns1__enumerateCustomEvents);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__enumerateCustomEvents(soap, &soap_tmp___ns1__enumerateCustomEvents, "-ns1:enumerateCustomEvents", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__enumerateCustomEvents(soap, &soap_tmp___ns1__enumerateCustomEvents, "-ns1:enumerateCustomEvents", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__enumerateCustomEventsResponse_)
		return soap_closesock(soap);
	ns1__enumerateCustomEventsResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__enumerateCustomEventsResponse_->soap_get(soap, "ns1:enumerateCustomEventsResponse", "ns1:enumerateCustomEventsResponse");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__enumerateEntities(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__enumerateEntities *ns1__enumerateEntities_, ns1__enumerateEntitiesResponse *ns1__enumerateEntitiesResponse_)
{	struct __ns1__enumerateEntities soap_tmp___ns1__enumerateEntities;
	if (!soap_endpoint)
		soap_endpoint = "http://192.168.0.56:8688/DCMService/services/Dcm.DcmPort/";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__enumerateEntities.ns1__enumerateEntities_ = ns1__enumerateEntities_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__enumerateEntities(soap, &soap_tmp___ns1__enumerateEntities);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__enumerateEntities(soap, &soap_tmp___ns1__enumerateEntities, "-ns1:enumerateEntities", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__enumerateEntities(soap, &soap_tmp___ns1__enumerateEntities, "-ns1:enumerateEntities", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__enumerateEntitiesResponse_)
		return soap_closesock(soap);
	ns1__enumerateEntitiesResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__enumerateEntitiesResponse_->soap_get(soap, "ns1:enumerateEntitiesResponse", "ns1:enumerateEntitiesResponse");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__enumerateEventHandlers(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__enumerateEventHandlers *ns1__enumerateEventHandlers_, ns1__enumerateEventHandlersResponse *ns1__enumerateEventHandlersResponse_)
{	struct __ns1__enumerateEventHandlers soap_tmp___ns1__enumerateEventHandlers;
	if (!soap_endpoint)
		soap_endpoint = "http://192.168.0.56:8688/DCMService/services/Dcm.DcmPort/";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__enumerateEventHandlers.ns1__enumerateEventHandlers_ = ns1__enumerateEventHandlers_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__enumerateEventHandlers(soap, &soap_tmp___ns1__enumerateEventHandlers);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__enumerateEventHandlers(soap, &soap_tmp___ns1__enumerateEventHandlers, "-ns1:enumerateEventHandlers", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__enumerateEventHandlers(soap, &soap_tmp___ns1__enumerateEventHandlers, "-ns1:enumerateEventHandlers", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__enumerateEventHandlersResponse_)
		return soap_closesock(soap);
	ns1__enumerateEventHandlersResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__enumerateEventHandlersResponse_->soap_get(soap, "ns1:enumerateEventHandlersResponse", "ns1:enumerateEventHandlersResponse");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__enumeratePolicies(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__enumeratePolicies *ns1__enumeratePolicies_, ns1__enumeratePoliciesResponse *ns1__enumeratePoliciesResponse_)
{	struct __ns1__enumeratePolicies soap_tmp___ns1__enumeratePolicies;
	if (!soap_endpoint)
		soap_endpoint = "http://192.168.0.56:8688/DCMService/services/Dcm.DcmPort/";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__enumeratePolicies.ns1__enumeratePolicies_ = ns1__enumeratePolicies_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__enumeratePolicies(soap, &soap_tmp___ns1__enumeratePolicies);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__enumeratePolicies(soap, &soap_tmp___ns1__enumeratePolicies, "-ns1:enumeratePolicies", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__enumeratePolicies(soap, &soap_tmp___ns1__enumeratePolicies, "-ns1:enumeratePolicies", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__enumeratePoliciesResponse_)
		return soap_closesock(soap);
	ns1__enumeratePoliciesResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__enumeratePoliciesResponse_->soap_get(soap, "ns1:enumeratePoliciesResponse", "ns1:enumeratePoliciesResponse");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__exportHierarchy(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__exportHierarchy *ns1__exportHierarchy_, ns1__exportHierarchyResponse *ns1__exportHierarchyResponse_)
{	struct __ns1__exportHierarchy soap_tmp___ns1__exportHierarchy;
	if (!soap_endpoint)
		soap_endpoint = "http://192.168.0.56:8688/DCMService/services/Dcm.DcmPort/";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__exportHierarchy.ns1__exportHierarchy_ = ns1__exportHierarchy_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__exportHierarchy(soap, &soap_tmp___ns1__exportHierarchy);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__exportHierarchy(soap, &soap_tmp___ns1__exportHierarchy, "-ns1:exportHierarchy", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__exportHierarchy(soap, &soap_tmp___ns1__exportHierarchy, "-ns1:exportHierarchy", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__exportHierarchyResponse_)
		return soap_closesock(soap);
	ns1__exportHierarchyResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__exportHierarchyResponse_->soap_get(soap, "ns1:exportHierarchyResponse", "ns1:exportHierarchyResponse");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__findEntities(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__findEntities *ns1__findEntities_, ns1__findEntitiesResponse *ns1__findEntitiesResponse_)
{	struct __ns1__findEntities soap_tmp___ns1__findEntities;
	if (!soap_endpoint)
		soap_endpoint = "http://192.168.0.56:8688/DCMService/services/Dcm.DcmPort/";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__findEntities.ns1__findEntities_ = ns1__findEntities_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__findEntities(soap, &soap_tmp___ns1__findEntities);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__findEntities(soap, &soap_tmp___ns1__findEntities, "-ns1:findEntities", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__findEntities(soap, &soap_tmp___ns1__findEntities, "-ns1:findEntities", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__findEntitiesResponse_)
		return soap_closesock(soap);
	ns1__findEntitiesResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__findEntitiesResponse_->soap_get(soap, "ns1:findEntitiesResponse", "ns1:findEntitiesResponse");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__getActionLogRecords(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__getActionLogRecords *ns1__getActionLogRecords_, ns1__getActionLogRecordsResponse *ns1__getActionLogRecordsResponse_)
{	struct __ns1__getActionLogRecords soap_tmp___ns1__getActionLogRecords;
	if (!soap_endpoint)
		soap_endpoint = "http://192.168.0.56:8688/DCMService/services/Dcm.DcmPort/";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getActionLogRecords.ns1__getActionLogRecords_ = ns1__getActionLogRecords_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getActionLogRecords(soap, &soap_tmp___ns1__getActionLogRecords);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getActionLogRecords(soap, &soap_tmp___ns1__getActionLogRecords, "-ns1:getActionLogRecords", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getActionLogRecords(soap, &soap_tmp___ns1__getActionLogRecords, "-ns1:getActionLogRecords", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__getActionLogRecordsResponse_)
		return soap_closesock(soap);
	ns1__getActionLogRecordsResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__getActionLogRecordsResponse_->soap_get(soap, "ns1:getActionLogRecordsResponse", "ns1:getActionLogRecordsResponse");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__getCollectionState(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__getCollectionState *ns1__getCollectionState_, ns1__getCollectionStateResponse *ns1__getCollectionStateResponse_)
{	struct __ns1__getCollectionState soap_tmp___ns1__getCollectionState;
	if (!soap_endpoint)
		soap_endpoint = "http://192.168.0.56:8688/DCMService/services/Dcm.DcmPort/";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getCollectionState.ns1__getCollectionState_ = ns1__getCollectionState_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getCollectionState(soap, &soap_tmp___ns1__getCollectionState);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getCollectionState(soap, &soap_tmp___ns1__getCollectionState, "-ns1:getCollectionState", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getCollectionState(soap, &soap_tmp___ns1__getCollectionState, "-ns1:getCollectionState", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__getCollectionStateResponse_)
		return soap_closesock(soap);
	ns1__getCollectionStateResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__getCollectionStateResponse_->soap_get(soap, "ns1:getCollectionStateResponse", "ns1:getCollectionStateResponse");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__getCustomEventData(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__getCustomEventData *ns1__getCustomEventData_, ns1__getCustomEventDataResponse *ns1__getCustomEventDataResponse_)
{	struct __ns1__getCustomEventData soap_tmp___ns1__getCustomEventData;
	if (!soap_endpoint)
		soap_endpoint = "http://192.168.0.56:8688/DCMService/services/Dcm.DcmPort/";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getCustomEventData.ns1__getCustomEventData_ = ns1__getCustomEventData_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getCustomEventData(soap, &soap_tmp___ns1__getCustomEventData);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getCustomEventData(soap, &soap_tmp___ns1__getCustomEventData, "-ns1:getCustomEventData", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getCustomEventData(soap, &soap_tmp___ns1__getCustomEventData, "-ns1:getCustomEventData", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__getCustomEventDataResponse_)
		return soap_closesock(soap);
	ns1__getCustomEventDataResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__getCustomEventDataResponse_->soap_get(soap, "ns1:getCustomEventDataResponse", "ns1:getCustomEventDataResponse");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__getEntityProperties(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__getEntityProperties *ns1__getEntityProperties_, ns1__getEntityPropertiesResponse *ns1__getEntityPropertiesResponse_)
{	struct __ns1__getEntityProperties soap_tmp___ns1__getEntityProperties;
	if (!soap_endpoint)
		soap_endpoint = "http://192.168.0.56:8688/DCMService/services/Dcm.DcmPort/";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getEntityProperties.ns1__getEntityProperties_ = ns1__getEntityProperties_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getEntityProperties(soap, &soap_tmp___ns1__getEntityProperties);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getEntityProperties(soap, &soap_tmp___ns1__getEntityProperties, "-ns1:getEntityProperties", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getEntityProperties(soap, &soap_tmp___ns1__getEntityProperties, "-ns1:getEntityProperties", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__getEntityPropertiesResponse_)
		return soap_closesock(soap);
	ns1__getEntityPropertiesResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__getEntityPropertiesResponse_->soap_get(soap, "ns1:getEntityPropertiesResponse", "ns1:getEntityPropertiesResponse");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__getEventHandler(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__getEventHandler *ns1__getEventHandler_, ns1__getEventHandlerResponse *ns1__getEventHandlerResponse_)
{	struct __ns1__getEventHandler soap_tmp___ns1__getEventHandler;
	if (!soap_endpoint)
		soap_endpoint = "http://192.168.0.56:8688/DCMService/services/Dcm.DcmPort/";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getEventHandler.ns1__getEventHandler_ = ns1__getEventHandler_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getEventHandler(soap, &soap_tmp___ns1__getEventHandler);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getEventHandler(soap, &soap_tmp___ns1__getEventHandler, "-ns1:getEventHandler", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getEventHandler(soap, &soap_tmp___ns1__getEventHandler, "-ns1:getEventHandler", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__getEventHandlerResponse_)
		return soap_closesock(soap);
	ns1__getEventHandlerResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__getEventHandlerResponse_->soap_get(soap, "ns1:getEventHandlerResponse", "ns1:getEventHandlerResponse");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__getEventState(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__getEventState *ns1__getEventState_, ns1__getEventStateResponse *ns1__getEventStateResponse_)
{	struct __ns1__getEventState soap_tmp___ns1__getEventState;
	if (!soap_endpoint)
		soap_endpoint = "http://192.168.0.56:8688/DCMService/services/Dcm.DcmPort/";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getEventState.ns1__getEventState_ = ns1__getEventState_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getEventState(soap, &soap_tmp___ns1__getEventState);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getEventState(soap, &soap_tmp___ns1__getEventState, "-ns1:getEventState", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getEventState(soap, &soap_tmp___ns1__getEventState, "-ns1:getEventState", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__getEventStateResponse_)
		return soap_closesock(soap);
	ns1__getEventStateResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__getEventStateResponse_->soap_get(soap, "ns1:getEventStateResponse", "ns1:getEventStateResponse");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__getGlobalProperty(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__getGlobalProperty *ns1__getGlobalProperty_, ns1__getGlobalPropertyResponse *ns1__getGlobalPropertyResponse_)
{	struct __ns1__getGlobalProperty soap_tmp___ns1__getGlobalProperty;
	if (!soap_endpoint)
		soap_endpoint = "http://192.168.0.56:8688/DCMService/services/Dcm.DcmPort/";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getGlobalProperty.ns1__getGlobalProperty_ = ns1__getGlobalProperty_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getGlobalProperty(soap, &soap_tmp___ns1__getGlobalProperty);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getGlobalProperty(soap, &soap_tmp___ns1__getGlobalProperty, "-ns1:getGlobalProperty", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getGlobalProperty(soap, &soap_tmp___ns1__getGlobalProperty, "-ns1:getGlobalProperty", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__getGlobalPropertyResponse_)
		return soap_closesock(soap);
	ns1__getGlobalPropertyResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__getGlobalPropertyResponse_->soap_get(soap, "ns1:getGlobalPropertyResponse", "ns1:getGlobalPropertyResponse");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__getMetricAggregationPeriodList(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__getMetricAggregationPeriodList *ns1__getMetricAggregationPeriodList_, ns1__getMetricAggregationPeriodListResponse *ns1__getMetricAggregationPeriodListResponse_)
{	struct __ns1__getMetricAggregationPeriodList soap_tmp___ns1__getMetricAggregationPeriodList;
	if (!soap_endpoint)
		soap_endpoint = "http://192.168.0.56:8688/DCMService/services/Dcm.DcmPort/";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getMetricAggregationPeriodList.ns1__getMetricAggregationPeriodList_ = ns1__getMetricAggregationPeriodList_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getMetricAggregationPeriodList(soap, &soap_tmp___ns1__getMetricAggregationPeriodList);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getMetricAggregationPeriodList(soap, &soap_tmp___ns1__getMetricAggregationPeriodList, "-ns1:getMetricAggregationPeriodList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getMetricAggregationPeriodList(soap, &soap_tmp___ns1__getMetricAggregationPeriodList, "-ns1:getMetricAggregationPeriodList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__getMetricAggregationPeriodListResponse_)
		return soap_closesock(soap);
	ns1__getMetricAggregationPeriodListResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__getMetricAggregationPeriodListResponse_->soap_get(soap, "ns1:getMetricAggregationPeriodListResponse", "ns1:getMetricAggregationPeriodListResponse");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__getMetricData(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__getMetricData *ns1__getMetricData_, ns1__getMetricDataResponse *ns1__getMetricDataResponse_)
{	struct __ns1__getMetricData soap_tmp___ns1__getMetricData;
	if (!soap_endpoint)
		soap_endpoint = "http://192.168.0.56:8688/DCMService/services/Dcm.DcmPort/";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getMetricData.ns1__getMetricData_ = ns1__getMetricData_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getMetricData(soap, &soap_tmp___ns1__getMetricData);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getMetricData(soap, &soap_tmp___ns1__getMetricData, "-ns1:getMetricData", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getMetricData(soap, &soap_tmp___ns1__getMetricData, "-ns1:getMetricData", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__getMetricDataResponse_)
		return soap_closesock(soap);
	ns1__getMetricDataResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__getMetricDataResponse_->soap_get(soap, "ns1:getMetricDataResponse", "ns1:getMetricDataResponse");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__getNextData(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__getNextData *ns1__getNextData_, ns1__getNextDataResponse *ns1__getNextDataResponse_)
{	struct __ns1__getNextData soap_tmp___ns1__getNextData;
	if (!soap_endpoint)
		soap_endpoint = "http://192.168.0.56:8688/DCMService/services/Dcm.DcmPort/";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getNextData.ns1__getNextData_ = ns1__getNextData_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getNextData(soap, &soap_tmp___ns1__getNextData);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getNextData(soap, &soap_tmp___ns1__getNextData, "-ns1:getNextData", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getNextData(soap, &soap_tmp___ns1__getNextData, "-ns1:getNextData", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__getNextDataResponse_)
		return soap_closesock(soap);
	ns1__getNextDataResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__getNextDataResponse_->soap_get(soap, "ns1:getNextDataResponse", "ns1:getNextDataResponse");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__getPolicyData(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__getPolicyData *ns1__getPolicyData_, ns1__getPolicyDataResponse *ns1__getPolicyDataResponse_)
{	struct __ns1__getPolicyData soap_tmp___ns1__getPolicyData;
	if (!soap_endpoint)
		soap_endpoint = "http://192.168.0.56:8688/DCMService/services/Dcm.DcmPort/";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getPolicyData.ns1__getPolicyData_ = ns1__getPolicyData_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getPolicyData(soap, &soap_tmp___ns1__getPolicyData);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getPolicyData(soap, &soap_tmp___ns1__getPolicyData, "-ns1:getPolicyData", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getPolicyData(soap, &soap_tmp___ns1__getPolicyData, "-ns1:getPolicyData", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__getPolicyDataResponse_)
		return soap_closesock(soap);
	ns1__getPolicyDataResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__getPolicyDataResponse_->soap_get(soap, "ns1:getPolicyDataResponse", "ns1:getPolicyDataResponse");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__getPolicyHistory(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__getPolicyHistory *ns1__getPolicyHistory_, ns1__getPolicyHistoryResponse *ns1__getPolicyHistoryResponse_)
{	struct __ns1__getPolicyHistory soap_tmp___ns1__getPolicyHistory;
	if (!soap_endpoint)
		soap_endpoint = "http://192.168.0.56:8688/DCMService/services/Dcm.DcmPort/";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getPolicyHistory.ns1__getPolicyHistory_ = ns1__getPolicyHistory_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getPolicyHistory(soap, &soap_tmp___ns1__getPolicyHistory);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getPolicyHistory(soap, &soap_tmp___ns1__getPolicyHistory, "-ns1:getPolicyHistory", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getPolicyHistory(soap, &soap_tmp___ns1__getPolicyHistory, "-ns1:getPolicyHistory", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__getPolicyHistoryResponse_)
		return soap_closesock(soap);
	ns1__getPolicyHistoryResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__getPolicyHistoryResponse_->soap_get(soap, "ns1:getPolicyHistoryResponse", "ns1:getPolicyHistoryResponse");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__getPolicyState(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__getPolicyState *ns1__getPolicyState_, ns1__getPolicyStateResponse *ns1__getPolicyStateResponse_)
{	struct __ns1__getPolicyState soap_tmp___ns1__getPolicyState;
	if (!soap_endpoint)
		soap_endpoint = "http://192.168.0.56:8688/DCMService/services/Dcm.DcmPort/";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getPolicyState.ns1__getPolicyState_ = ns1__getPolicyState_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getPolicyState(soap, &soap_tmp___ns1__getPolicyState);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getPolicyState(soap, &soap_tmp___ns1__getPolicyState, "-ns1:getPolicyState", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getPolicyState(soap, &soap_tmp___ns1__getPolicyState, "-ns1:getPolicyState", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__getPolicyStateResponse_)
		return soap_closesock(soap);
	ns1__getPolicyStateResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__getPolicyStateResponse_->soap_get(soap, "ns1:getPolicyStateResponse", "ns1:getPolicyStateResponse");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__getPredefinedEventTypes(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__getPredefinedEventTypes *ns1__getPredefinedEventTypes_, ns1__getPredefinedEventTypesResponse *ns1__getPredefinedEventTypesResponse_)
{	struct __ns1__getPredefinedEventTypes soap_tmp___ns1__getPredefinedEventTypes;
	if (!soap_endpoint)
		soap_endpoint = "http://192.168.0.56:8688/DCMService/services/Dcm.DcmPort/";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getPredefinedEventTypes.ns1__getPredefinedEventTypes_ = ns1__getPredefinedEventTypes_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getPredefinedEventTypes(soap, &soap_tmp___ns1__getPredefinedEventTypes);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getPredefinedEventTypes(soap, &soap_tmp___ns1__getPredefinedEventTypes, "-ns1:getPredefinedEventTypes", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getPredefinedEventTypes(soap, &soap_tmp___ns1__getPredefinedEventTypes, "-ns1:getPredefinedEventTypes", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__getPredefinedEventTypesResponse_)
		return soap_closesock(soap);
	ns1__getPredefinedEventTypesResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__getPredefinedEventTypesResponse_->soap_get(soap, "ns1:getPredefinedEventTypesResponse", "ns1:getPredefinedEventTypesResponse");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__getQueryAggregationPeriodList(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__getQueryAggregationPeriodList *ns1__getQueryAggregationPeriodList_, ns1__getQueryAggregationPeriodListResponse *ns1__getQueryAggregationPeriodListResponse_)
{	struct __ns1__getQueryAggregationPeriodList soap_tmp___ns1__getQueryAggregationPeriodList;
	if (!soap_endpoint)
		soap_endpoint = "http://192.168.0.56:8688/DCMService/services/Dcm.DcmPort/";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getQueryAggregationPeriodList.ns1__getQueryAggregationPeriodList_ = ns1__getQueryAggregationPeriodList_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getQueryAggregationPeriodList(soap, &soap_tmp___ns1__getQueryAggregationPeriodList);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getQueryAggregationPeriodList(soap, &soap_tmp___ns1__getQueryAggregationPeriodList, "-ns1:getQueryAggregationPeriodList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getQueryAggregationPeriodList(soap, &soap_tmp___ns1__getQueryAggregationPeriodList, "-ns1:getQueryAggregationPeriodList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__getQueryAggregationPeriodListResponse_)
		return soap_closesock(soap);
	ns1__getQueryAggregationPeriodListResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__getQueryAggregationPeriodListResponse_->soap_get(soap, "ns1:getQueryAggregationPeriodListResponse", "ns1:getQueryAggregationPeriodListResponse");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__getQueryData(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__getQueryData *ns1__getQueryData_, ns1__getQueryDataResponse *ns1__getQueryDataResponse_)
{	struct __ns1__getQueryData soap_tmp___ns1__getQueryData;
	if (!soap_endpoint)
		soap_endpoint = "http://192.168.0.56:8688/DCMService/services/Dcm.DcmPort/";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getQueryData.ns1__getQueryData_ = ns1__getQueryData_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getQueryData(soap, &soap_tmp___ns1__getQueryData);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getQueryData(soap, &soap_tmp___ns1__getQueryData, "-ns1:getQueryData", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getQueryData(soap, &soap_tmp___ns1__getQueryData, "-ns1:getQueryData", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__getQueryDataResponse_)
		return soap_closesock(soap);
	ns1__getQueryDataResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__getQueryDataResponse_->soap_get(soap, "ns1:getQueryDataResponse", "ns1:getQueryDataResponse");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__importHierarchy(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__importHierarchy *ns1__importHierarchy_, ns1__importHierarchyResponse *ns1__importHierarchyResponse_)
{	struct __ns1__importHierarchy soap_tmp___ns1__importHierarchy;
	if (!soap_endpoint)
		soap_endpoint = "http://192.168.0.56:8688/DCMService/services/Dcm.DcmPort/";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__importHierarchy.ns1__importHierarchy_ = ns1__importHierarchy_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__importHierarchy(soap, &soap_tmp___ns1__importHierarchy);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__importHierarchy(soap, &soap_tmp___ns1__importHierarchy, "-ns1:importHierarchy", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__importHierarchy(soap, &soap_tmp___ns1__importHierarchy, "-ns1:importHierarchy", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__importHierarchyResponse_)
		return soap_closesock(soap);
	ns1__importHierarchyResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__importHierarchyResponse_->soap_get(soap, "ns1:importHierarchyResponse", "ns1:importHierarchyResponse");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__isPolicyActive(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__isPolicyActive *ns1__isPolicyActive_, ns1__isPolicyActiveResponse *ns1__isPolicyActiveResponse_)
{	struct __ns1__isPolicyActive soap_tmp___ns1__isPolicyActive;
	if (!soap_endpoint)
		soap_endpoint = "http://192.168.0.56:8688/DCMService/services/Dcm.DcmPort/";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__isPolicyActive.ns1__isPolicyActive_ = ns1__isPolicyActive_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__isPolicyActive(soap, &soap_tmp___ns1__isPolicyActive);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__isPolicyActive(soap, &soap_tmp___ns1__isPolicyActive, "-ns1:isPolicyActive", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__isPolicyActive(soap, &soap_tmp___ns1__isPolicyActive, "-ns1:isPolicyActive", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__isPolicyActiveResponse_)
		return soap_closesock(soap);
	ns1__isPolicyActiveResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__isPolicyActiveResponse_->soap_get(soap, "ns1:isPolicyActiveResponse", "ns1:isPolicyActiveResponse");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__rediscoverNodeCapabilities(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__rediscoverNodeCapabilities *ns1__rediscoverNodeCapabilities_, ns1__rediscoverNodeCapabilitiesResponse *ns1__rediscoverNodeCapabilitiesResponse_)
{	struct __ns1__rediscoverNodeCapabilities soap_tmp___ns1__rediscoverNodeCapabilities;
	if (!soap_endpoint)
		soap_endpoint = "http://192.168.0.56:8688/DCMService/services/Dcm.DcmPort/";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__rediscoverNodeCapabilities.ns1__rediscoverNodeCapabilities_ = ns1__rediscoverNodeCapabilities_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__rediscoverNodeCapabilities(soap, &soap_tmp___ns1__rediscoverNodeCapabilities);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__rediscoverNodeCapabilities(soap, &soap_tmp___ns1__rediscoverNodeCapabilities, "-ns1:rediscoverNodeCapabilities", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__rediscoverNodeCapabilities(soap, &soap_tmp___ns1__rediscoverNodeCapabilities, "-ns1:rediscoverNodeCapabilities", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__rediscoverNodeCapabilitiesResponse_)
		return soap_closesock(soap);
	ns1__rediscoverNodeCapabilitiesResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__rediscoverNodeCapabilitiesResponse_->soap_get(soap, "ns1:rediscoverNodeCapabilitiesResponse", "ns1:rediscoverNodeCapabilitiesResponse");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__removeCustomEvent(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__removeCustomEvent *ns1__removeCustomEvent_, ns1__removeCustomEventResponse *ns1__removeCustomEventResponse_)
{	struct __ns1__removeCustomEvent soap_tmp___ns1__removeCustomEvent;
	if (!soap_endpoint)
		soap_endpoint = "http://192.168.0.56:8688/DCMService/services/Dcm.DcmPort/";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__removeCustomEvent.ns1__removeCustomEvent_ = ns1__removeCustomEvent_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__removeCustomEvent(soap, &soap_tmp___ns1__removeCustomEvent);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__removeCustomEvent(soap, &soap_tmp___ns1__removeCustomEvent, "-ns1:removeCustomEvent", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__removeCustomEvent(soap, &soap_tmp___ns1__removeCustomEvent, "-ns1:removeCustomEvent", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__removeCustomEventResponse_)
		return soap_closesock(soap);
	ns1__removeCustomEventResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__removeCustomEventResponse_->soap_get(soap, "ns1:removeCustomEventResponse", "ns1:removeCustomEventResponse");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__removeEntity(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__removeEntity *ns1__removeEntity_, ns1__removeEntityResponse *ns1__removeEntityResponse_)
{	struct __ns1__removeEntity soap_tmp___ns1__removeEntity;
	if (!soap_endpoint)
		soap_endpoint = "http://192.168.0.56:8688/DCMService/services/Dcm.DcmPort/";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__removeEntity.ns1__removeEntity_ = ns1__removeEntity_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__removeEntity(soap, &soap_tmp___ns1__removeEntity);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__removeEntity(soap, &soap_tmp___ns1__removeEntity, "-ns1:removeEntity", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__removeEntity(soap, &soap_tmp___ns1__removeEntity, "-ns1:removeEntity", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__removeEntityResponse_)
		return soap_closesock(soap);
	ns1__removeEntityResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__removeEntityResponse_->soap_get(soap, "ns1:removeEntityResponse", "ns1:removeEntityResponse");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__removePolicy(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__removePolicy *ns1__removePolicy_, ns1__removePolicyResponse *ns1__removePolicyResponse_)
{	struct __ns1__removePolicy soap_tmp___ns1__removePolicy;
	if (!soap_endpoint)
		soap_endpoint = "http://192.168.0.56:8688/DCMService/services/Dcm.DcmPort/";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__removePolicy.ns1__removePolicy_ = ns1__removePolicy_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__removePolicy(soap, &soap_tmp___ns1__removePolicy);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__removePolicy(soap, &soap_tmp___ns1__removePolicy, "-ns1:removePolicy", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__removePolicy(soap, &soap_tmp___ns1__removePolicy, "-ns1:removePolicy", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__removePolicyResponse_)
		return soap_closesock(soap);
	ns1__removePolicyResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__removePolicyResponse_->soap_get(soap, "ns1:removePolicyResponse", "ns1:removePolicyResponse");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__schedulePolicy(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__schedulePolicy *ns1__schedulePolicy_, ns1__schedulePolicyResponse *ns1__schedulePolicyResponse_)
{	struct __ns1__schedulePolicy soap_tmp___ns1__schedulePolicy;
	if (!soap_endpoint)
		soap_endpoint = "http://192.168.0.56:8688/DCMService/services/Dcm.DcmPort/";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__schedulePolicy.ns1__schedulePolicy_ = ns1__schedulePolicy_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__schedulePolicy(soap, &soap_tmp___ns1__schedulePolicy);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__schedulePolicy(soap, &soap_tmp___ns1__schedulePolicy, "-ns1:schedulePolicy", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__schedulePolicy(soap, &soap_tmp___ns1__schedulePolicy, "-ns1:schedulePolicy", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__schedulePolicyResponse_)
		return soap_closesock(soap);
	ns1__schedulePolicyResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__schedulePolicyResponse_->soap_get(soap, "ns1:schedulePolicyResponse", "ns1:schedulePolicyResponse");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__setCollectionState(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__setCollectionState *ns1__setCollectionState_, ns1__setCollectionStateResponse *ns1__setCollectionStateResponse_)
{	struct __ns1__setCollectionState soap_tmp___ns1__setCollectionState;
	if (!soap_endpoint)
		soap_endpoint = "http://192.168.0.56:8688/DCMService/services/Dcm.DcmPort/";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__setCollectionState.ns1__setCollectionState_ = ns1__setCollectionState_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__setCollectionState(soap, &soap_tmp___ns1__setCollectionState);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__setCollectionState(soap, &soap_tmp___ns1__setCollectionState, "-ns1:setCollectionState", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__setCollectionState(soap, &soap_tmp___ns1__setCollectionState, "-ns1:setCollectionState", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__setCollectionStateResponse_)
		return soap_closesock(soap);
	ns1__setCollectionStateResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__setCollectionStateResponse_->soap_get(soap, "ns1:setCollectionStateResponse", "ns1:setCollectionStateResponse");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__setEntityProperties(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__setEntityProperties *ns1__setEntityProperties_, ns1__setEntityPropertiesResponse *ns1__setEntityPropertiesResponse_)
{	struct __ns1__setEntityProperties soap_tmp___ns1__setEntityProperties;
	if (!soap_endpoint)
		soap_endpoint = "http://192.168.0.56:8688/DCMService/services/Dcm.DcmPort/";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__setEntityProperties.ns1__setEntityProperties_ = ns1__setEntityProperties_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__setEntityProperties(soap, &soap_tmp___ns1__setEntityProperties);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__setEntityProperties(soap, &soap_tmp___ns1__setEntityProperties, "-ns1:setEntityProperties", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__setEntityProperties(soap, &soap_tmp___ns1__setEntityProperties, "-ns1:setEntityProperties", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__setEntityPropertiesResponse_)
		return soap_closesock(soap);
	ns1__setEntityPropertiesResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__setEntityPropertiesResponse_->soap_get(soap, "ns1:setEntityPropertiesResponse", "ns1:setEntityPropertiesResponse");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__setEventState(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__setEventState *ns1__setEventState_, ns1__setEventStateResponse *ns1__setEventStateResponse_)
{	struct __ns1__setEventState soap_tmp___ns1__setEventState;
	if (!soap_endpoint)
		soap_endpoint = "http://192.168.0.56:8688/DCMService/services/Dcm.DcmPort/";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__setEventState.ns1__setEventState_ = ns1__setEventState_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__setEventState(soap, &soap_tmp___ns1__setEventState);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__setEventState(soap, &soap_tmp___ns1__setEventState, "-ns1:setEventState", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__setEventState(soap, &soap_tmp___ns1__setEventState, "-ns1:setEventState", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__setEventStateResponse_)
		return soap_closesock(soap);
	ns1__setEventStateResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__setEventStateResponse_->soap_get(soap, "ns1:setEventStateResponse", "ns1:setEventStateResponse");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__setGlobalProperty(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__setGlobalProperty *ns1__setGlobalProperty_, ns1__setGlobalPropertyResponse *ns1__setGlobalPropertyResponse_)
{	struct __ns1__setGlobalProperty soap_tmp___ns1__setGlobalProperty;
	if (!soap_endpoint)
		soap_endpoint = "http://192.168.0.56:8688/DCMService/services/Dcm.DcmPort/";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__setGlobalProperty.ns1__setGlobalProperty_ = ns1__setGlobalProperty_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__setGlobalProperty(soap, &soap_tmp___ns1__setGlobalProperty);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__setGlobalProperty(soap, &soap_tmp___ns1__setGlobalProperty, "-ns1:setGlobalProperty", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__setGlobalProperty(soap, &soap_tmp___ns1__setGlobalProperty, "-ns1:setGlobalProperty", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__setGlobalPropertyResponse_)
		return soap_closesock(soap);
	ns1__setGlobalPropertyResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__setGlobalPropertyResponse_->soap_get(soap, "ns1:setGlobalPropertyResponse", "ns1:setGlobalPropertyResponse");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__setPolicyState(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__setPolicyState *ns1__setPolicyState_, ns1__setPolicyStateResponse *ns1__setPolicyStateResponse_)
{	struct __ns1__setPolicyState soap_tmp___ns1__setPolicyState;
	if (!soap_endpoint)
		soap_endpoint = "http://192.168.0.56:8688/DCMService/services/Dcm.DcmPort/";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__setPolicyState.ns1__setPolicyState_ = ns1__setPolicyState_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__setPolicyState(soap, &soap_tmp___ns1__setPolicyState);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__setPolicyState(soap, &soap_tmp___ns1__setPolicyState, "-ns1:setPolicyState", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__setPolicyState(soap, &soap_tmp___ns1__setPolicyState, "-ns1:setPolicyState", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__setPolicyStateResponse_)
		return soap_closesock(soap);
	ns1__setPolicyStateResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__setPolicyStateResponse_->soap_get(soap, "ns1:setPolicyStateResponse", "ns1:setPolicyStateResponse");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__submitSecretKey(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__submitSecretKey *ns1__submitSecretKey_, ns1__submitSecretKeyResponse *ns1__submitSecretKeyResponse_)
{	struct __ns1__submitSecretKey soap_tmp___ns1__submitSecretKey;
	if (!soap_endpoint)
		soap_endpoint = "http://192.168.0.56:8688/DCMService/services/Dcm.DcmPort/";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__submitSecretKey.ns1__submitSecretKey_ = ns1__submitSecretKey_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__submitSecretKey(soap, &soap_tmp___ns1__submitSecretKey);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__submitSecretKey(soap, &soap_tmp___ns1__submitSecretKey, "-ns1:submitSecretKey", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__submitSecretKey(soap, &soap_tmp___ns1__submitSecretKey, "-ns1:submitSecretKey", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__submitSecretKeyResponse_)
		return soap_closesock(soap);
	ns1__submitSecretKeyResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__submitSecretKeyResponse_->soap_get(soap, "ns1:submitSecretKeyResponse", "ns1:submitSecretKeyResponse");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__subscribeEventHandler(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__subscribeEventHandler *ns1__subscribeEventHandler_, ns1__subscribeEventHandlerResponse *ns1__subscribeEventHandlerResponse_)
{	struct __ns1__subscribeEventHandler soap_tmp___ns1__subscribeEventHandler;
	if (!soap_endpoint)
		soap_endpoint = "http://192.168.0.56:8688/DCMService/services/Dcm.DcmPort/";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__subscribeEventHandler.ns1__subscribeEventHandler_ = ns1__subscribeEventHandler_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__subscribeEventHandler(soap, &soap_tmp___ns1__subscribeEventHandler);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__subscribeEventHandler(soap, &soap_tmp___ns1__subscribeEventHandler, "-ns1:subscribeEventHandler", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__subscribeEventHandler(soap, &soap_tmp___ns1__subscribeEventHandler, "-ns1:subscribeEventHandler", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__subscribeEventHandlerResponse_)
		return soap_closesock(soap);
	ns1__subscribeEventHandlerResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__subscribeEventHandlerResponse_->soap_get(soap, "ns1:subscribeEventHandlerResponse", "ns1:subscribeEventHandlerResponse");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__subscribePredefinedEvent(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__subscribePredefinedEvent *ns1__subscribePredefinedEvent_, ns1__subscribePredefinedEventResponse *ns1__subscribePredefinedEventResponse_)
{	struct __ns1__subscribePredefinedEvent soap_tmp___ns1__subscribePredefinedEvent;
	if (!soap_endpoint)
		soap_endpoint = "http://192.168.0.56:8688/DCMService/services/Dcm.DcmPort/";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__subscribePredefinedEvent.ns1__subscribePredefinedEvent_ = ns1__subscribePredefinedEvent_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__subscribePredefinedEvent(soap, &soap_tmp___ns1__subscribePredefinedEvent);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__subscribePredefinedEvent(soap, &soap_tmp___ns1__subscribePredefinedEvent, "-ns1:subscribePredefinedEvent", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__subscribePredefinedEvent(soap, &soap_tmp___ns1__subscribePredefinedEvent, "-ns1:subscribePredefinedEvent", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__subscribePredefinedEventResponse_)
		return soap_closesock(soap);
	ns1__subscribePredefinedEventResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__subscribePredefinedEventResponse_->soap_get(soap, "ns1:subscribePredefinedEventResponse", "ns1:subscribePredefinedEventResponse");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__unsubscribeEventHandler(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__unsubscribeEventHandler *ns1__unsubscribeEventHandler_, ns1__unsubscribeEventHandlerResponse *ns1__unsubscribeEventHandlerResponse_)
{	struct __ns1__unsubscribeEventHandler soap_tmp___ns1__unsubscribeEventHandler;
	if (!soap_endpoint)
		soap_endpoint = "http://192.168.0.56:8688/DCMService/services/Dcm.DcmPort/";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__unsubscribeEventHandler.ns1__unsubscribeEventHandler_ = ns1__unsubscribeEventHandler_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__unsubscribeEventHandler(soap, &soap_tmp___ns1__unsubscribeEventHandler);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__unsubscribeEventHandler(soap, &soap_tmp___ns1__unsubscribeEventHandler, "-ns1:unsubscribeEventHandler", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__unsubscribeEventHandler(soap, &soap_tmp___ns1__unsubscribeEventHandler, "-ns1:unsubscribeEventHandler", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__unsubscribeEventHandlerResponse_)
		return soap_closesock(soap);
	ns1__unsubscribeEventHandlerResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__unsubscribeEventHandlerResponse_->soap_get(soap, "ns1:unsubscribeEventHandlerResponse", "ns1:unsubscribeEventHandlerResponse");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__unsubscribePredefinedEvent(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__unsubscribePredefinedEvent *ns1__unsubscribePredefinedEvent_, ns1__unsubscribePredefinedEventResponse *ns1__unsubscribePredefinedEventResponse_)
{	struct __ns1__unsubscribePredefinedEvent soap_tmp___ns1__unsubscribePredefinedEvent;
	if (!soap_endpoint)
		soap_endpoint = "http://192.168.0.56:8688/DCMService/services/Dcm.DcmPort/";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__unsubscribePredefinedEvent.ns1__unsubscribePredefinedEvent_ = ns1__unsubscribePredefinedEvent_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__unsubscribePredefinedEvent(soap, &soap_tmp___ns1__unsubscribePredefinedEvent);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__unsubscribePredefinedEvent(soap, &soap_tmp___ns1__unsubscribePredefinedEvent, "-ns1:unsubscribePredefinedEvent", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__unsubscribePredefinedEvent(soap, &soap_tmp___ns1__unsubscribePredefinedEvent, "-ns1:unsubscribePredefinedEvent", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__unsubscribePredefinedEventResponse_)
		return soap_closesock(soap);
	ns1__unsubscribePredefinedEventResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__unsubscribePredefinedEventResponse_->soap_get(soap, "ns1:unsubscribePredefinedEventResponse", "ns1:unsubscribePredefinedEventResponse");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__updateCustomEvent(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__updateCustomEvent *ns1__updateCustomEvent_, ns1__updateCustomEventResponse *ns1__updateCustomEventResponse_)
{	struct __ns1__updateCustomEvent soap_tmp___ns1__updateCustomEvent;
	if (!soap_endpoint)
		soap_endpoint = "http://192.168.0.56:8688/DCMService/services/Dcm.DcmPort/";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__updateCustomEvent.ns1__updateCustomEvent_ = ns1__updateCustomEvent_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__updateCustomEvent(soap, &soap_tmp___ns1__updateCustomEvent);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__updateCustomEvent(soap, &soap_tmp___ns1__updateCustomEvent, "-ns1:updateCustomEvent", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__updateCustomEvent(soap, &soap_tmp___ns1__updateCustomEvent, "-ns1:updateCustomEvent", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__updateCustomEventResponse_)
		return soap_closesock(soap);
	ns1__updateCustomEventResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__updateCustomEventResponse_->soap_get(soap, "ns1:updateCustomEventResponse", "ns1:updateCustomEventResponse");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

/* End of soapClient.cpp */
